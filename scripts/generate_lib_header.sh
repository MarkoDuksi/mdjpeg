#!/bin/env bash

set -e

if [ $# -ge 1 ]; then
	SRC_DIR="$1" 
else
    echo "usage: $0 source_dir [-X | --prep-for-cross-compile]";
    exit 1
fi

mkdir -p api_h.tmp/src
mkdir -p obj/library

# generate common description header with a commit hash of the paricular
# snapshot in the library repo history
commit=$(git rev-parse --short HEAD)
working_tree_status=$(git status --porcelain)
printf "// This file is automatically generated for convenience, not for editing.\n" > api_h.tmp/mdjpeg.h
printf "// Based on mdjpeg commit: ${commit}" >> api_h.tmp/mdjpeg.h
[ -n "$working_tree_status" ] && echo "(dirty)" >> api_h.tmp/mdjpeg.h

printf "\n#pragma once\n\n" >> api_h.tmp/mdjpeg.h

# if library is to be cross-compiled
# currently, does not include files in subdirectories
if [ $# -ge 2 ] && [[ "$2" =~ -X|--prep-for-cross-compile ]]; then

    # copy only relevant .cpp files (exclude the 'int main' one)
    # note that "int main" must not appear in a relevant non-main file,
    # not even in a string or comment
    for source_file in $(grep -L 'int main' src/*.cpp); do
        cp ${source_file} obj/library/
    done

    # copy only relevant .h files
    cp src/*.h obj/library/
    rm obj/library/protoapi.h

    # facilitate a single #include directive
    mv api_h.tmp/mdjpeg.h obj/library/mdjpeg.h
    sed '/tests/d' src/protoapi.h >> obj/library/mdjpeg.h
    rm -rf api_h.tmp
    exit 0
else
    # for compiled library, a unified header file will be beneficial 
    cp src/protoapi.h api_h.tmp/src/
fi

####################################
## generate a unified header file ##
####################################
EXCLUDE_HDRS='tests.h'

# strip all (many are common across multiple files) #include <...> directives
for file in $(find ${SRC_DIR} -type f -name '*.h' -a \! -name ${EXCLUDE_HDRS} -a \! -name '*protoapi.h'); do
	mkdir -p $(dirname api_h.tmp/$file)
	sed '/^#include </d' $file > api_h.tmp/$file
done

# bring back the stripped #include <...> directives, keeping only unique
find src -type f -name '*.h' -a \! -name ${EXCLUDE_HDRS} -exec grep -E '^#include <' '{}' \; | sort --unique >> api_h.tmp/mdjpeg.h

# expand local #include "..." directives
g++ -E -P -C -nostdinc api_h.tmp/src/protoapi.h >> api_h.tmp/mdjpeg.h

mv api_h.tmp/mdjpeg.h obj/library/mdjpeg.h
rm -rf api_h.tmp
